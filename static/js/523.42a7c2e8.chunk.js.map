{"version":3,"file":"static/js/523.42a7c2e8.chunk.js","mappings":"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","sources":["components/MovieDetails/MovieDetailsStyled.jsx","components/MovieDetails/MovieDetailsPage.jsx","services/Api.jsx","styles/style.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Section = styled.section`\n  display: flex;\n  padding: 10px;\n  margin-top: 15px;\n  margin-right: auto;\n  margin-left: auto;\n  width: 100%;\n  justify-content: center;\n`;\n\nexport const FilmInfoContainer = styled.div`\n  margin-right: 15px;\n  margin-left: 15px;\n  max-width: 100%;\n  max-height: 50%;\n`;\nexport const FilmMore = styled.section`\n  padding: 10px;\n  margin: 15px auto;\n`;\nexport const Paragraph = styled.div`\n  margin-bottom: 15px;\n  font-size: 14px;\n  color: ${props => props.theme.colors.active};\n`;\n\nexport const GenresList = styled.ul`\n  display: flex;\n  font-size: 14px;\n  color: ${props => props.theme.colors.active};\n`;\n\nexport const GenresItem = styled.li`\n  font-weight: 600;\n  margin-right: 7px;\n`;\n\nexport const LinkReturn = styled(NavLink)`\n  display: flex;\n  justify-content: center;\n  text-decoration: none;\n  padding: 10px 40px;\n  color: ${props => props.theme.colors.active};\n  font-weight: 500;\n  width: 150px;\n  background-color: ${props => props.theme.colors.greyBg};\n  border-radius: 25px 0 0 25px;\n  transition: all 250ms ease-in-out;\n  :hover {\n    transform: scale(1.05);\n    box-shadow: inset 1px 1px 2px ${props => props.theme.colors.white},\n      inset -1px -1px 2px ${props => props.theme.colors.active};\n  }\n`;\n\nexport const LinkCast = styled(NavLink)`\n  height: 45px;\n  padding: 10px 30px;\n  margin-right: 15px;\n  border-radius: 25px 0 0 25px;\n  text-decoration: none;\n  color: ${props => props.theme.colors.active};\n  border: 1px solid ${props => props.theme.colors.active};\n  transition: all 250ms ease-in-out;\n  &.active {\n    color: ${props => props.theme.colors.white};\n    background-color: ${props => props.theme.colors.active};\n  }\n   :hover {\n    transform: scale(1.05);\n    box-shadow: inset 1px 1px 2px ${props => props.theme.colors.white},\n      inset -1px -1px 2px ${props => props.theme.colors.active};\n`;\nexport const LinkRewiews = styled(NavLink)`\n  height: 45px;\n  padding: 10px 15px;\n  margin-right: 15px;\n  border-radius: 0 25px 25px 0;\n  text-decoration: none;\n  color: ${props => props.theme.colors.active};\n  border: 1px solid ${props => props.theme.colors.active};\n  transition: all 250ms ease-in-out;\n  &.active {\n    color: ${props => props.theme.colors.white};\n    background-color: ${props => props.theme.colors.active};\n  }\n   :hover {\n    transform: scale(1.05);\n    box-shadow: inset 1px 1px 2px ${props => props.theme.colors.white},\n      inset -1px -1px 2px ${props => props.theme.colors.active};\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { fetchMovieDetails } from '../../services/Api';\nimport noPhoto from '../../images/noPhoto.png';\nimport {\n  LinkReturn,\n  Paragraph,\n  LinkCast,\n  LinkRewiews,\n  FilmInfoContainer,\n  Section,\n  GenresItem,\n  GenresList,\n  FilmMore,\n} from './MovieDetailsStyled';\nimport { Loader } from '../Loader/Loader';\nimport {\n  MainMovieTitle,\n  Img,\n  Title,\n  SecondaryMovieTitle,\n} from '../../styles/style';\n\nexport default function MovieDetailsPage() {\n  const [movies, setMovies] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  let { moviesId } = useParams();\n\n  const location = useLocation();\n  const locationFrom = location?.state?.from ?? '/';\n\n  useEffect(() => {\n    const oneMovie = async () => {\n      setLoading(true);\n      try {\n        await fetchMovieDetails(moviesId).then(data => {\n          setMovies(data);\n        });\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    oneMovie();\n  }, [moviesId]);\n\n  const releaseData = new Date(movies.release_date);\n  const { release_date, title, vote_average, overview, genres, poster_path } =\n    movies;\n\n  return (\n    <>\n      <LinkReturn to={locationFrom}> â—€ BACK </LinkReturn>\n      {loading && <Loader />}\n      {error && <Title>Oops...there is nothing, try again</Title>}\n      {!error && (\n        <Section>\n          {poster_path ? (\n            <Img\n              src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n              alt=\"\"\n              min-width={'100px'}\n            />\n          ) : (\n            <Img src={noPhoto} alt=\"\" />\n          )}\n\n          <FilmInfoContainer>\n            <MainMovieTitle>\n              {title} ({releaseData.getFullYear(release_date)})\n            </MainMovieTitle>\n            <SecondaryMovieTitle>\n              User score: {vote_average * 10}%\n            </SecondaryMovieTitle>\n            <SecondaryMovieTitle>Genres:</SecondaryMovieTitle>\n            <GenresList>\n              {genres &&\n                genres.map(({ name }) => (\n                  <GenresItem key={name}>ðŸŽ¥ {name} |</GenresItem>\n                ))}\n            </GenresList>\n            <SecondaryMovieTitle>Overview </SecondaryMovieTitle>\n            {overview ? (\n              <Paragraph>{overview}</Paragraph>\n            ) : (\n              <Paragraph>No overview</Paragraph>\n            )}\n          </FilmInfoContainer>\n        </Section>\n      )}\n      {!error && (\n        <Section>\n          <LinkCast\n            to={`/movies/${moviesId}/cast`}\n            state={{ from: locationFrom }}\n          >\n            Cast\n          </LinkCast>\n          <LinkRewiews\n            to={`/movies/${moviesId}/reviews`}\n            state={{ from: locationFrom }}\n          >\n            Reviews\n          </LinkRewiews>\n        </Section>\n      )}\n      <FilmMore>\n        <Outlet />\n      </FilmMore>\n    </>\n  );\n}\n","import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = 'f7e01896e2d5fbc24092901b8d13f2b9';\n\nasync function fetchMovies(url = '', config = {}) {\n  const response = await axios.get(url, config);\n  return response.data;\n}\n\nexport function fetchTrendMovie() {\n  return fetchMovies(`${BASE_URL}/trending/movie/day?api_key=${KEY}`);\n}\n\nexport function fetchSearchMovie(query) {\n  return fetchMovies(\n    `${BASE_URL}search/movie?api_key=${KEY}&query=${query}&language=en-US&include_adult=false`\n  );\n}\n\nexport function fetchMovieDetails(moviesId) {\n  return fetchMovies(\n    `${BASE_URL}movie/${moviesId}?api_key=${KEY}&language=en-US`\n  );\n}\nexport function fetchCast(moviesId) {\n  return fetchMovies(\n    `${BASE_URL}movie/${moviesId}/credits?api_key=${KEY}&language=en-US&`\n  );\n}\n\nexport function fetchReviews(movieId) {\n  return fetchMovies(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&`\n  );\n}\n\nfetchSearchMovie.propTypes = {\n  search: PropTypes.string.isRequired,\n};\n\nfetchMovieDetails.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n\nfetchReviews.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n\nfetchCast.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nconst Section = styled.section`\n  display: flex;\n  margin-top: 15px;\n  margin-right: auto;\n  margin-left: auto;\n  justify-content: center;\n`;\n\nconst Title = styled.h1`\n  text-align: center;\n  font-size: 28px;\n  margin-bottom: 10px;\n  color: ${props => props.theme.colors.primaryText};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst LinkStyled = styled(NavLink)`\n  text-decoration: none;\n`;\n\nconst CardInfoContainer = styled.div`\n  padding: 0 10px;\n`;\n\nconst MainMovieTitle = styled.h2`\n  font-size: 26px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  color: ${props => props.theme.colors.primaryText};\n`;\n\nconst SecondaryMovieTitle = styled.h3`\n  font-size: 16px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  color: ${props => props.theme.colors.primaryText};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst MovieList = styled.ul`\n  display: grid;\n  max-width: 100%;\n  margin-left: auto;\n  margin-right: auto;\n  grid-gap: 24px;\n  grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));\n`;\n\nconst MovieItem = styled.li`\n  width: 100%;\n  display: block;\n  padding: 5px;\n  background-color: ${props => props.theme.colors.buttonBg};\n  transform: scale(1);\n  transition: transform 250ms linear;\n  border-radius: 15px 15px 0 0;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  :hover,\n  :focus {\n    transform: scale(1.05);\n    cursor: pointer;\n  }\n`;\n\nconst MovieText = styled.p`\n  margin-bottom: 10px;\n  color: ${props => props.theme.colors.grey};\n  font-size: 14px;\n  font-weight: bold;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst Img = styled.img`\n  border-radius: 15px 15px 0 0;\n  max-width: 300px;\n`;\n\nconst ImageFilm = styled.img`\n  border-radius: 15px 15px 0 0;\n  width: 100%;\n`;\n\nexport {\n  CardInfoContainer,\n  Title,\n  MainMovieTitle,\n  LinkStyled,\n  SecondaryMovieTitle,\n  MovieList,\n  MovieItem,\n  MovieText,\n  Img,\n  ImageFilm,\n  Section,\n};\n"],"names":["Section","styled","FilmInfoContainer","FilmMore","Paragraph","props","theme","colors","active","GenresList","GenresItem","LinkReturn","NavLink","greyBg","white","LinkCast","LinkRewiews","MovieDetailsPage","useState","movies","setMovies","loading","setLoading","error","setError","moviesId","useParams","location","useLocation","locationFrom","state","from","useEffect","oneMovie","fetchMovieDetails","then","data","releaseData","Date","release_date","title","vote_average","overview","genres","poster_path","to","Loader","src","alt","noPhoto","getFullYear","map","name","BASE_URL","KEY","fetchMovies","url","config","axios","response","fetchTrendMovie","fetchSearchMovie","query","fetchCast","fetchReviews","movieId","propTypes","search","PropTypes","id","Title","primaryText","LinkStyled","CardInfoContainer","MainMovieTitle","SecondaryMovieTitle","MovieList","MovieItem","buttonBg","MovieText","grey","Img","ImageFilm"],"sourceRoot":""}